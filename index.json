[{"content":"版本 版本在iOS12以上,由于版本不同,部分内容显示和截图不同, 截图的版本是:iOS17\n目标 根据明天是否是节假日或年假, 自动打开或关闭闹钟\n前期准备 新建一个闹钟, 标签为起床 快捷指令配置 可以使用iOS的safari直接访问如下网址下载两个快捷指令\n下载 https://www.icloud.com/shortcuts/31fd381e33cf407f862324652db3705f https://www.icloud.com/shortcuts/33908eb14dea409ca04a80e78a8e4ad9 手工配置 明天是否休息还是上班 节假日闹钟 配置自动化 打开快捷指令,选择特定时间 输入时间, 选择立即运行 点击我的快捷指令, 选择节假日闹钟 Q\u0026amp;A Q: 日期中没有Family A: 手工将Family替换成个人\n","permalink":"https://qing.shuncs.com/post/apple/holiday/","summary":"使用快捷方式自动打开节假日闹钟","title":"使用快捷方式自动打开节假日闹钟"},{"content":"使用环境 开发环境: Windows 11\nHugo版本: 0.108\nGit版本: 2.38.1\nTheme: PaperMod\n在HTML文件添加引用 在PaperMod\\layouts\\partials\\head.html文件中，添加如下内容\n\u0026lt;link rel=\u0026#39;stylesheet\u0026#39; href=\u0026#39;https://ik.imagekit.io/chinesefonts/packages/lxgwwenkai/dist/LXGWWenKai-Regular/result.css\u0026#39; /\u0026gt; 在CSS文件指定使用区域 在PaperMod\\assets\\css\\extended\\blank.css文件中，修改字体使用区域中添加如下内容\n.post-content{ font-family: LXGW WenKai,serif; } 参考文章 https://chinese-font.netlify.app/ 全文完\n","permalink":"https://qing.shuncs.com/post/hugo/hugofont/","summary":"添加中文的web字体","title":"在hugo里面添加中文web字体"},{"content":"前提 目前选股全部基于自己研究的模型, 这种模型经过2-3年的运行之后, 发现了很多问题, 由于之前大部分问题是模型本身问题, 所以一直在对模型进行分析修补.\n从2022年开始, 模型运行进入一个新的阶段, 在运行了半年之后, 发生另一个问题就是资金分配的问题. 经常会出现仓位已经见底了, 但模型仍然会筛选出新的股票, 更关键的是新股票有时候是盈利的, 反而持仓的股票是亏损的.\n痛定思痛之后, 决定对资金如何分配进行一些不成熟思考, 并对2022年全部及2023年1-4月份在股票池中的股票进行分析研究, 试图找出一个合理的资金分配方式.\n目的 能够将资金分配合理化, 并尽可能保证每月有1-2只买入并获得期望收益, 同时资金分配方案能够符合实战要求\n回测方案 回测资金50万. (资金多少与收益无关联性)\n范围包括了2022年的全部及2023年部分时间.\n按方案中的规则进行分配 所有收益率均是内部报酬率\n方案1 重仓持股某一只股票\n规则 按时间顺序将全部资金买入某一只股票 如果剩余金额符合条件买入第二只股票, 则将剩余资金全部买入. 如果当天有多只股票, 则每只股票平均分配剩余资金, 但其中一只股票不符合买入标准(科创板买入200股起),则该股票的所分配资金会被遗弃,不会累加到其余股票上 当天卖出股票所获得的资金次日方能买入 忽略手续费 回测结果 时间 数量(支) 利润(元) 收益率 2022 30 -343350.10 -75.89% 2023 13 27039.50 7.91% 结论 2022年的收益率简直是惨不忍睹, 原因之一, 这是股票池中的全部股票, 从实战中不可能全部买入, 其二去年的行情与模型的分析背离, 所以收益率会如此之低. 不过这也从另一个方面验证鸡蛋绝不能放在同一个篮子里面.\n方案2 每只股票分配相同金额\n规则 按时间顺序用固定金额买入某一只股票 如果当天只有一只股票且剩余金额小于固定金额, 则按剩余金额买入. 如果当天有多只股票, 则每只股票均分剩余金额, 无论均分金额是否小于固定金额, 但其中一只股票不符合买入标准(科创板买入200股起),则该股票的所分配资金会被丢弃,不会累加到其余股票上 当天卖出股票所获得的资金次日方能买入 忽略手续费 回测结果 时间 分配金额(万元) 数量(支) 利润(元) 收益率 2022 10 115 -228355.12 -70.37% 2022 20 63 -319658.81 -72.12% 2022 30 43 -331300.58 -73.82% 2023 10 22 29144.33 16.67% 2023 20 20 32477.51 10.42% 2023 30 15 47834.00 14.58% 结论 从结果来看, 收益率完全依赖于模型的质量. 不过收益摆动过于巨大, 如果在熊市中会遭受巨大的损失, 同时买入数量过多, 当投入金额10万的时候, 每月买入数量接近10支.\n方案3 分别每只模型打分, 根据不同的分值按比例分配仓位\n分值按自定义规则进行评价, 分值与仓位分配纯属主观, 并且评分标准未发生改变, 所以分析具有可行性\n规则 如果当天只有一只股票, 分值≥7分且\u0026lt;8分, 分配仓位的30%,;如果分值≥8, 分配仓位的80% 如何当天有多只股票, 按分值大小分配剩余仓位. 分值高优先分配, 若分值大小在同一区间内, 均分剩余仓位, 若股票不符合买入标准(科创板买入200股起),则放弃买入, 且不会累加到其余股票上 当天卖出股票所获得的资金次日方能买入 忽略手续费 回测结果 时间 数量(支) 利润(元) 收益率 2022 19 5070.00 4.55% 2023 8 4006.14 2.92% 结论 收益率显著提升, 特别是去年是正收益, 今年收益不高的原因估计有二个, 第一是大于8分的股票迄今为止没出现, 去年出现4支, 一支负收益(大盘股,实战中不会买), 其余3支都是正收益. 第二时间才4个月, 后续情况不明朗.\n方案4 根据止损率不同分配不同金额\n规则 止损率在0-10%之间, 分配50%的资金, 止损率在10.01%-20%之间,分配30%的资金, 止损率在20%以上, 分配20%的资金. 如果当天只有一只股票, 按上述规则分配资金 如果当天有多只股票, 先分配止损率最低的, 在全仓剩余金额和全仓50%的资金, 取最小, 再继续分配止损率次高的, 资金分配和上述相同, 再分配止损率最高. 当天卖出股票所获得的资金次日方能买入 忽略手续费 回测结果 时间 数量(支) 利润(元) 收益率 2022 163 -187110.74 -55.74% 2023 23 27624.66 12.07% 结论 和方案2相比, 亏损有小幅减少但仍有5成.\n总结 这4个方案中, 没有一个是完美方案, 或多或少存在一些不足, 从我个人角度来看, 我的目标是尽可能是正收益, 相对比较保守. 所以我将会选择方案3.\n其实方案还可以做成复合式, 比如在7-8分之内, 根据止损率不同分配资金, 超过8分则继续方案3的规则. 还有凯利公式, 但因为没有历史的数据, 所以没办法计算具体的仓位策略.\n最后由于这次分析的都是同一周期的, 还有更复杂的多周期数据(包括30-200个交易日), 由于今年才开始将更长周期的数据纳入股票池, 所以具体的效果还有待观察.\n全文完\n","permalink":"https://qing.shuncs.com/post/finance/capital/","summary":"如何为每支股票分配合适资金","title":"如何在股票交易中合理分配资金使得收益最大化"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\n扩容设备: /dev/sda2（如果不同，后面涉及全部需要修改）\n目标 按下文配置后，openWrt可以使用全部磁盘空间\n建议在安装完openWrt系统后执行，避免某些进程在执行过程中而导致无法扩容\n安装相关软件 opkg update opkg install cfdisk tune2fs resize2fs 执行cfdisk，选择待扩容的设备，在下面选择Resize\n输入新的size，然后Write，输入yes，选择Quit\n执行以下命令，所有输入均选择y ，然后重启\nmount -o remount,ro / e2fsck -f /dev/sda2 reboot 重启完执行以下命令，并重启 mount -o remount,ro / tune2fs -O^resize_inode /dev/sda2 e2fsck -f /dev/sda2 reboot 重启完输入以下命令，并重启 mount -o remount,ro / tune2fs -O^resize_inode /dev/sda2 fsck.ext4 /dev/sda2 reboot 重启完输入以下命令，执行命令检查是否已扩容 resize2fs /dev/sda2 df -h 全文完\n","permalink":"https://qing.shuncs.com/post/tech/openwrtdisk/","summary":"扩容openWrt磁盘容量","title":"在openWrt上扩容磁盘容量"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n主路由器的地址: 192.168.88.1(如果不同,后面涉及此地址全部需要修改)\n目标 按下文配置好网关后，指定的设备走软路由，其余设备主软路由\n0. 关闭主路由的DHCP 请参考主路由器的说明，关闭主路由的DHCP\n1. 配置DHCP 首先在DHCP文件中添加一个tag，\nuci set dhcp.iot=\u0026#39;tag\u0026#39; uci add_list dhcp.iot.dhcp_option=\u0026#39;6,8.8.4.4,114.114.114.114\u0026#39; uci add_list dhcp.iot.dhcp_option=\u0026#39;3,192.168.88.1\u0026#39; uci set dhcp.iot.force=\u0026#39;1\u0026#39; uci commit dhcp 单独为每一个主机配置一个，其中设备名称自定义，MAC地址不区分大小写\nuci add dhcp host uci commit dhcp uci set dhcp.@host[0].dns=\u0026#39;1\u0026#39; uci set dhcp.@host[0].ip=\u0026#39;IP地址1\u0026#39; uci set dhcp.@host[0].leasetime=\u0026#39;infinite\u0026#39; uci set dhcp.@host[0].name=\u0026#39;设备名称1\u0026#39; uci set dhcp.@host[0].mac=\u0026#39;MAC地址1\u0026#39; uci set dhcp.@host[0].tag=\u0026#39;iot\u0026#39; uci commit dhcp uci add dhcp host uci commit dhcp uci set dhcp.@host[1].dns=\u0026#39;1\u0026#39; uci set dhcp.@host[1].ip=\u0026#39;IP地址2\u0026#39; uci set dhcp.@host[1].leasetime=\u0026#39;infinite\u0026#39; uci set dhcp.@host[1].name=\u0026#39;设备名称2\u0026#39; uci set dhcp.@host[1].mac=\u0026#39;MAC地址2\u0026#39; uci set dhcp.@host[1].tag=\u0026#39;iot\u0026#39; uci commit dhcp uci add dhcp host uci commit dhcp uci set dhcp.@host[2].dns=\u0026#39;1\u0026#39; uci set dhcp.@host[2].ip=\u0026#39;IP地址3\u0026#39; uci set dhcp.@host[2].leasetime=\u0026#39;infinite\u0026#39; uci set dhcp.@host[2].name=\u0026#39;设备名称3\u0026#39; uci set dhcp.@host[2].mac=\u0026#39;MAC地址3\u0026#39; uci set dhcp.@host[2].tag=\u0026#39;iot\u0026#39; uci commit dhcp 指定设备配置结束后，重启dhcp，然后设备重新连接无线即可。\nservice dhcp restart 3. 说明 如何查看设备的MAC地址 iPhone\n设置-\u0026gt;无线局域网-\u0026gt;无线局域网地址 Windows操作系统\n开始-\u0026gt;运行-\u0026gt;输入cmd，执行ipconfig /all 命令，物理地址就是MAC地址 全文完\n","permalink":"https://qing.shuncs.com/post/tech/gatewayconf/","summary":"指定设备走软路由，其余走主路由","title":"在openWrt上安装并配置Clash (网关篇)"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n目标 在电脑或手机上手动配置网关，可以直接代理上网\n执行前Clash必须已启动且能正常上网\n0. 自动安装 如果openWrt未安装tproxy模块则执行下面脚本 wget https://www.shuncs.com/download/instnft_redir.sh \u0026amp;\u0026amp; chmod +x instnft_redir.sh \u0026amp;\u0026amp; ./instnft_redir.sh 如果openWrt已安装tproxy模块执行下面脚本 wget https://www.shuncs.com/download/instnft_tproxy.sh \u0026amp;\u0026amp; chmod +x instnft_tproxy.sh \u0026amp;\u0026amp; ./instnft_tproxy.sh 1. 新增私有地址列表 vi /etc/nftables.d/private.nft 将下列内容复制到此文件，然后按:wq退出\ndefine private_list = { 0.0.0.0/8, 10.0.0.0/8, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 224.0.0.0/4, 240.0.0.0/4 } 2. 新增nftable配置 新增配置文件 vi /etc/nftables.conf 将下面内容复制到此文件，并按:wq保存退出 #!/usr/sbin/nft -f flush ruleset define tproxyPort=7893 define redirPort=7892 include \u0026#34;/etc/nftables.d/private.nft\u0026#34; table inet clash { chain prerouting { type nat hook prerouting priority 0; policy accept; ip daddr $private_list return # 如果未安装tproxy,则将下一行注释掉 meta l4proto {tcp, udp } tproxy to :$tproxyPort # 如果已安装tproxy,则将下一行注释掉 ip protocol tcp redirect to :$redirPort } } 3. 生效Nftable配置 nft flush ruleset nft -f /etc/nftables.conf 4. 设置在openWrt每次开机自动启动Nftable 新增配置文件 vi /etc/init.d/nft 将下述内容复制到文件中,将按:wq保存退出 #!/bin/sh /etc/rc.common START=90 STOP=15 USE_PROCD=1 #PROCD_DEBUG=1 CONF=/etc/ CONFFILE=nftables.conf PROG=/usr/sbin/nft start_service() { procd_open_instance procd_set_param command $PROG -f $CONF$CONFFILE procd_set_param stdout 1 procd_set_param stderr 1 procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-9} procd_close_instance } 修改权限,并使之生效 chmod 755 /etc/init.d/nft service nft enable 启动nft service nft start 5. 配置Dnsmasq, 将dns指向Clash的5353端口 uci add_list dhcp.@dnsmasq[0].server=\u0026#39;127.0.0.1#5353\u0026#39; uci commit dhcp service dnsmasq restart 全文完\n","permalink":"https://qing.shuncs.com/post/tech/nft4clash/","summary":"配置nftable","title":"在openWrt上安装并配置Clash (Nftable篇)"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nClash版本: Premium\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n目标 安装及配置完Clash后，在浏览器的设置-\u0026gt;系统-\u0026gt;打开您计算机的代理设置-\u0026gt;手动设置代理 按上图输入主路由器地址和端口，并保存退出就可以访问Google\n0. 下载 以下软件需要预先下载，然后再通过Winscp工具上传到openWrt里面。\nClash Country.mmdb yacd (UI界面，可选) 也可以在openWrt命令行执行以下脚本自动安装及配置后续全部内容（但代理配置文件仍需自定义）\nwget https://www.shuncs.com/download/instclash.sh \u0026amp;\u0026amp; chmod +x instclash.sh \u0026amp;\u0026amp; ./instclash.sh 1. 安装Clash 打开Winscp客户端，点击新建会话(快捷键ctrl+n)，文件协议选择SCP，主机名里面输入主路由器地址192.168.88.3，用户名输入root，如下图 然后点击保存和确定，然后点击登录，将下载好的软件上传到openWrt中(如果有密钥提示，点击添加)\n使用putty登录openWrt，然后按顺序执行以下命令（大小写勿输错）\ncd /root gunzip clash-linux-amd64-latest.gz mv clash-linux-amd64-latest /usr/bin/clash chmod +x /usr/bin/clash mkdir -p /root/.config/clash mv Country.mmdb .config/clash/ 2. 配置 新增Clash配置文件 vi /root/.config/clash/router.yaml 将如下内容复制到文件中(以下部分内容自定义)，然后输入:wq保存退出\nmixed-port: 7890 redir-port: 7892 tproxy-port: 7893 allow-lan: true log-level: info ipv6: false #下面三行内容可以在web页面查看流量规则等,如果未安装请在前面加# secret: \u0026#39;\u0026#39; external-controller: \u0026#39;192.168.88.3:9090\u0026#39; external-ui: ui profile: store-fake-ip: true #如果未安装tun，请在前面加#注释掉 tun: enable: true stack: system dns-hijack: - tcp://8.8.8.8:53 - udp://8.8.8.8:53 auto-route: true auto-detect-interface: true dns: enable: true ipv6: false listen: 0.0.0.0:5353 enhanced-mode: fake-ip fake-ip-range: 198.18.0.1/16 nameserver: - 114.114.114.114 - 223.5.5.5 fallback: - tls://dns.google:853 - tls://1.1.1.1:853 fallback-filter: geoip: true ipcidr: - 240.0.0.0/4 proxy-providers: proxyA: #根据实际情况自定义 type: file path: ./proxies/proxyA.yaml #根据实际情况自定义 health-check: enable: true interval: 36000 url: http://www.gstatic.com/generate_204 proxyB: #根据实际情况自定义 type: file path: ./proxies/proxyB.yaml #根据实际情况自定义 health-check: enable: true interval: 36000 url: http://www.gstatic.com/generate_204 proxyURL: #如果是订阅链接在此处配置即可 type: url url: \u0026#34;https://raw.githubusercontent.com/learnhard-cn/free_proxy_ss/main/clash/clash.provider.yaml\u0026#34; #根据实际情况自定义 interval: 3600 path: ./proxies/proxyURL.yaml #根据实际情况自定义 health-check: enable: true interval: 600 url: http://www.gstatic.com/generate_204 proxy-groups: - name: \u0026#34;auto\u0026#34; type: url-test use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 - name: Proxy type: select use: - proxyB #需要和上面名称对应 # fallback 自动选择服务器 - name: \u0026#34;fallback-auto\u0026#34; type: fallback use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 - name: \u0026#34;load-balance\u0026#34; type: load-balance use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 rule-providers: reject: type: file behavior: classical path: ./rules/reject.yaml proxy: type: file behavior: classical path: ./rules/proxy.yaml rules: # 拒绝-\u0026gt;代理-\u0026gt;其余直连 - RULE-SET,reject,REJECT - RULE-SET,proxy,fallback-auto - MATCH,DIRECT 新增规则文件 输入以下命令\nvi /root/.config/clash/rules/proxy.yaml 将如下内容复制到文件中，然后输入:wq保存退出\npayload: - DOMAIN-KEYWORD,amazon - DOMAIN-KEYWORD,google - DOMAIN-KEYWORD,gmail - DOMAIN-KEYWORD,youtube - DOMAIN-KEYWORD,facebook - DOMAIN-SUFFIX,fb.me - DOMAIN-SUFFIX,fbcdn.net - DOMAIN-KEYWORD,twitter - DOMAIN-KEYWORD,instagram - DOMAIN-KEYWORD,dropbox - DOMAIN-SUFFIX,twimg.com - DOMAIN-KEYWORD,blogspot - DOMAIN-SUFFIX,youtu.be - DOMAIN-KEYWORD,whatsapp - DOMAIN-SUFFIX,9to5mac.com - DOMAIN-SUFFIX,abpchina.org - DOMAIN-SUFFIX,adblockplus.org - DOMAIN-SUFFIX,adobe.com - DOMAIN-SUFFIX,akamaized.net - DOMAIN-SUFFIX,alfredapp.com - DOMAIN-SUFFIX,amplitude.com - DOMAIN-SUFFIX,ampproject.org - DOMAIN-SUFFIX,android.com - DOMAIN-SUFFIX,angularjs.org - DOMAIN-SUFFIX,aolcdn.com - DOMAIN-SUFFIX,apkpure.com - DOMAIN-SUFFIX,appledaily.com - DOMAIN-SUFFIX,appshopper.com - DOMAIN-SUFFIX,appspot.com - DOMAIN-SUFFIX,arcgis.com - DOMAIN-SUFFIX,archive.org - DOMAIN-SUFFIX,armorgames.com - DOMAIN-SUFFIX,aspnetcdn.com - DOMAIN-SUFFIX,att.com - DOMAIN-SUFFIX,awsstatic.com - DOMAIN-SUFFIX,azureedge.net - DOMAIN-SUFFIX,azurewebsites.net - DOMAIN-SUFFIX,bing.com - DOMAIN-SUFFIX,bintray.com - DOMAIN-SUFFIX,bit.com - DOMAIN-SUFFIX,bit.ly - DOMAIN-SUFFIX,bitbucket.org - DOMAIN-SUFFIX,bjango.com - DOMAIN-SUFFIX,bkrtx.com - DOMAIN-SUFFIX,blog.com - DOMAIN-SUFFIX,blogcdn.com - DOMAIN-SUFFIX,blogger.com - DOMAIN-SUFFIX,blogsmithmedia.com - DOMAIN-SUFFIX,blogspot.com - DOMAIN-SUFFIX,blogspot.hk - DOMAIN-SUFFIX,bloomberg.com - DOMAIN-SUFFIX,box.com - DOMAIN-SUFFIX,box.net - DOMAIN-SUFFIX,cachefly.net - DOMAIN-SUFFIX,chromium.org - DOMAIN-SUFFIX,cl.ly - DOMAIN-SUFFIX,cloudflare.com - DOMAIN-SUFFIX,cloudfront.net - DOMAIN-SUFFIX,cloudmagic.com - DOMAIN-SUFFIX,cmail19.com - DOMAIN-SUFFIX,cnet.com - DOMAIN-SUFFIX,cocoapods.org - DOMAIN-SUFFIX,comodoca.com - DOMAIN-SUFFIX,crashlytics.com - DOMAIN-SUFFIX,culturedcode.com - DOMAIN-SUFFIX,d.pr - DOMAIN-SUFFIX,danilo.to - DOMAIN-SUFFIX,dayone.me - DOMAIN-SUFFIX,db.tt - DOMAIN-SUFFIX,deskconnect.com - DOMAIN-SUFFIX,disq.us - DOMAIN-SUFFIX,disqus.com - DOMAIN-SUFFIX,disquscdn.com - DOMAIN-SUFFIX,dnsimple.com - DOMAIN-SUFFIX,docker.com - DOMAIN-SUFFIX,dribbble.com - DOMAIN-SUFFIX,droplr.com - DOMAIN-SUFFIX,duckduckgo.com - DOMAIN-SUFFIX,dueapp.com - DOMAIN-SUFFIX,dytt8.net - DOMAIN-SUFFIX,edgecastcdn.net - DOMAIN-SUFFIX,edgekey.net - DOMAIN-SUFFIX,edgesuite.net - DOMAIN-SUFFIX,engadget.com - DOMAIN-SUFFIX,entrust.net - DOMAIN-SUFFIX,eurekavpt.com - DOMAIN-SUFFIX,evernote.com - DOMAIN-SUFFIX,fabric.io - DOMAIN-SUFFIX,fast.com - DOMAIN-SUFFIX,fastly.net - DOMAIN-SUFFIX,fc2.com - DOMAIN-SUFFIX,feedburner.com - DOMAIN-SUFFIX,feedly.com - DOMAIN-SUFFIX,feedsportal.com - DOMAIN-SUFFIX,fiftythree.com - DOMAIN-SUFFIX,firebaseio.com - DOMAIN-SUFFIX,flexibits.com - DOMAIN-SUFFIX,flickr.com - DOMAIN-SUFFIX,flipboard.com - DOMAIN-SUFFIX,g.co - DOMAIN-SUFFIX,gabia.net - DOMAIN-SUFFIX,geni.us - DOMAIN-SUFFIX,gfx.ms - DOMAIN-SUFFIX,ggpht.com - DOMAIN-SUFFIX,ghostnoteapp.com - DOMAIN-SUFFIX,git.io - DOMAIN-KEYWORD,github - DOMAIN-SUFFIX,globalsign.com - DOMAIN-SUFFIX,gmodules.com - DOMAIN-SUFFIX,godaddy.com - DOMAIN-SUFFIX,golang.org - DOMAIN-SUFFIX,gongm.in - DOMAIN-SUFFIX,goo.gl - DOMAIN-SUFFIX,goodreaders.com - DOMAIN-SUFFIX,goodreads.com - DOMAIN-SUFFIX,gravatar.com - DOMAIN-SUFFIX,gstatic.com - DOMAIN-SUFFIX,gvt0.com - DOMAIN-SUFFIX,hockeyapp.net - DOMAIN-SUFFIX,hotmail.com - DOMAIN-SUFFIX,icons8.com - DOMAIN-SUFFIX,ifixit.com - DOMAIN-SUFFIX,ift.tt - DOMAIN-SUFFIX,ifttt.com - DOMAIN-SUFFIX,iherb.com - DOMAIN-SUFFIX,imageshack.us - DOMAIN-SUFFIX,img.ly - DOMAIN-SUFFIX,imgur.com - DOMAIN-SUFFIX,imore.com - DOMAIN-SUFFIX,instapaper.com - DOMAIN-SUFFIX,ipn.li - DOMAIN-SUFFIX,is.gd - DOMAIN-SUFFIX,issuu.com - DOMAIN-SUFFIX,itgonglun.com - DOMAIN-SUFFIX,itun.es - DOMAIN-SUFFIX,ixquick.com - DOMAIN-SUFFIX,j.mp - DOMAIN-SUFFIX,js.revsci.net - DOMAIN-SUFFIX,jshint.com - DOMAIN-SUFFIX,jtvnw.net - DOMAIN-SUFFIX,justgetflux.com - DOMAIN-SUFFIX,kat.cr - DOMAIN-SUFFIX,klip.me - DOMAIN-SUFFIX,libsyn.com - DOMAIN-SUFFIX,linkedin.com - DOMAIN-SUFFIX,linode.com - DOMAIN-SUFFIX,lithium.com - DOMAIN-SUFFIX,littlehj.com - DOMAIN-SUFFIX,live.com - DOMAIN-SUFFIX,live.net - DOMAIN-SUFFIX,livefilestore.com - DOMAIN-SUFFIX,llnwd.net - DOMAIN-SUFFIX,macid.co - DOMAIN-SUFFIX,macromedia.com - DOMAIN-SUFFIX,macrumors.com - DOMAIN-SUFFIX,mashable.com - DOMAIN-SUFFIX,mathjax.org - DOMAIN-SUFFIX,medium.com - DOMAIN-SUFFIX,mega.co.nz - DOMAIN-SUFFIX,mega.nz - DOMAIN-SUFFIX,megaupload.com - DOMAIN-SUFFIX,microsofttranslator.com - DOMAIN-SUFFIX,mindnode.com - DOMAIN-SUFFIX,mobile01.com - DOMAIN-SUFFIX,modmyi.com - DOMAIN-SUFFIX,msedge.net - DOMAIN-SUFFIX,myfontastic.com - DOMAIN-SUFFIX,name.com - DOMAIN-SUFFIX,nextmedia.com - DOMAIN-SUFFIX,nsstatic.net - DOMAIN-SUFFIX,nssurge.com - DOMAIN-SUFFIX,nyt.com - DOMAIN-SUFFIX,nytimes.com - DOMAIN-SUFFIX,omnigroup.com - DOMAIN-SUFFIX,onedrive.com - DOMAIN-SUFFIX,onenote.com - DOMAIN-SUFFIX,ooyala.com - DOMAIN-SUFFIX,openvpn.net - DOMAIN-SUFFIX,openwrt.org - DOMAIN-SUFFIX,orkut.com - DOMAIN-SUFFIX,osxdaily.com - DOMAIN-SUFFIX,outlook.com - DOMAIN-SUFFIX,ow.ly - DOMAIN-SUFFIX,paddleapi.com - DOMAIN-SUFFIX,parallels.com - DOMAIN-SUFFIX,parse.com - DOMAIN-SUFFIX,pdfexpert.com - DOMAIN-SUFFIX,periscope.tv - DOMAIN-SUFFIX,pinboard.in - DOMAIN-SUFFIX,pinterest.com - DOMAIN-SUFFIX,pixelmator.com - DOMAIN-SUFFIX,pixiv.net - DOMAIN-SUFFIX,playpcesor.com - DOMAIN-SUFFIX,playstation.com - DOMAIN-SUFFIX,playstation.com.hk - DOMAIN-SUFFIX,playstation.net - DOMAIN-SUFFIX,playstationnetwork.com - DOMAIN-SUFFIX,pushwoosh.com - DOMAIN-SUFFIX,rime.im - DOMAIN-SUFFIX,servebom.com - DOMAIN-SUFFIX,sfx.ms - DOMAIN-SUFFIX,shadowsocks.org - DOMAIN-SUFFIX,sharethis.com - DOMAIN-SUFFIX,shazam.com - DOMAIN-SUFFIX,skype.com - DOMAIN-SUFFIX,smartdnsProxy.com - DOMAIN-SUFFIX,smartmailcloud.com - DOMAIN-SUFFIX,sndcdn.com - DOMAIN-SUFFIX,sony.com - DOMAIN-SUFFIX,soundcloud.com - DOMAIN-SUFFIX,sourceforge.net - DOMAIN-SUFFIX,spotify.com - DOMAIN-SUFFIX,squarespace.com - DOMAIN-SUFFIX,sstatic.net - DOMAIN-SUFFIX,st.luluku.pw - DOMAIN-SUFFIX,stackoverflow.com - DOMAIN-SUFFIX,startpage.com - DOMAIN-SUFFIX,staticflickr.com - DOMAIN-SUFFIX,steamcommunity.com - DOMAIN-SUFFIX,symauth.com - DOMAIN-SUFFIX,symcb.com - DOMAIN-SUFFIX,symcd.com - DOMAIN-SUFFIX,tapbots.com - DOMAIN-SUFFIX,tapbots.net - DOMAIN-SUFFIX,tdesktop.com - DOMAIN-SUFFIX,techcrunch.com - DOMAIN-SUFFIX,techsmith.com - DOMAIN-SUFFIX,thepiratebay.org - DOMAIN-SUFFIX,theverge.com - DOMAIN-SUFFIX,time.com - DOMAIN-SUFFIX,timeinc.net - DOMAIN-SUFFIX,tiny.cc - DOMAIN-SUFFIX,tinypic.com - DOMAIN-SUFFIX,tmblr.co - DOMAIN-SUFFIX,todoist.com - DOMAIN-SUFFIX,trello.com - DOMAIN-SUFFIX,trustasiassl.com - DOMAIN-SUFFIX,tumblr.co - DOMAIN-SUFFIX,tumblr.com - DOMAIN-SUFFIX,tweetdeck.com - DOMAIN-SUFFIX,tweetmarker.net - DOMAIN-SUFFIX,twitch.tv - DOMAIN-SUFFIX,txmblr.com - DOMAIN-SUFFIX,typekit.net - DOMAIN-SUFFIX,ubertags.com - DOMAIN-SUFFIX,ublock.org - DOMAIN-SUFFIX,ubnt.com - DOMAIN-SUFFIX,ulyssesapp.com - DOMAIN-SUFFIX,urchin.com - DOMAIN-SUFFIX,usertrust.com - DOMAIN-SUFFIX,v.gd - DOMAIN-SUFFIX,v2ex.com - DOMAIN-SUFFIX,vimeo.com - DOMAIN-SUFFIX,vimeocdn.com - DOMAIN-SUFFIX,vine.co - DOMAIN-SUFFIX,vivaldi.com - DOMAIN-SUFFIX,vox-cdn.com - DOMAIN-SUFFIX,vsco.co - DOMAIN-SUFFIX,vultr.com - DOMAIN-SUFFIX,w.org - DOMAIN-SUFFIX,w3schools.com - DOMAIN-SUFFIX,webtype.com - DOMAIN-SUFFIX,wikiwand.com - DOMAIN-SUFFIX,wikileaks.org - DOMAIN-SUFFIX,wikimedia.org - DOMAIN-SUFFIX,wikipedia.com - DOMAIN-SUFFIX,wikipedia.org - DOMAIN-SUFFIX,windows.com - DOMAIN-SUFFIX,windows.net - DOMAIN-SUFFIX,wire.com - DOMAIN-SUFFIX,wordpress.com - DOMAIN-SUFFIX,workflowy.com - DOMAIN-SUFFIX,wp.com - DOMAIN-SUFFIX,wsj.com - DOMAIN-SUFFIX,wsj.net - DOMAIN-SUFFIX,xda-developers.com - DOMAIN-SUFFIX,xeeno.com - DOMAIN-SUFFIX,xiti.com - DOMAIN-SUFFIX,yahoo.com - DOMAIN-SUFFIX,yimg.com - DOMAIN-SUFFIX,ying.com - DOMAIN-SUFFIX,yoyo.org - DOMAIN-SUFFIX,ytimg.com 新增黑名单文件 输入以下命令\nvi /root/.config/clash/rules/reject.yaml 将如下内容复制到文件中，然后输入:wq保存退出\npayload: - DOMAIN-KEYWORD,admarvel - DOMAIN-KEYWORD,admaster - DOMAIN-KEYWORD,adsage - DOMAIN-KEYWORD,adsmogo - DOMAIN-KEYWORD,adsrvmedia - DOMAIN-KEYWORD,adwords - DOMAIN-KEYWORD,adservice - DOMAIN-SUFFIX,appsflyer.com - DOMAIN-KEYWORD,domob - DOMAIN-SUFFIX,doubleclick.net - DOMAIN-KEYWORD,duomeng - DOMAIN-KEYWORD,dwtrack - DOMAIN-KEYWORD,guanggao - DOMAIN-KEYWORD,lianmeng - DOMAIN-SUFFIX,mmstat.com - DOMAIN-KEYWORD,mopub - DOMAIN-KEYWORD,omgmta - DOMAIN-KEYWORD,openx - DOMAIN-KEYWORD,partnerad - DOMAIN-KEYWORD,pingfore - DOMAIN-KEYWORD,supersonicads - DOMAIN-KEYWORD,uedas - DOMAIN-KEYWORD,umeng - DOMAIN-KEYWORD,usage - DOMAIN-SUFFIX,vungle.com - DOMAIN-KEYWORD,wlmonitor - DOMAIN-KEYWORD,zjtoolbar 测试Clash配置文件的格式是否正确 clash -d /root/.config/clash/ -t -f router.yaml 设置openWrt中每次开机自动启动Clash vi /etc/init.d/clash 将此内容复制到文件中,并输入:wq保存退出。\n#!/bin/sh /etc/rc.common START=90 STOP=15 USE_PROCD=1 #PROCD_DEBUG=1 CONF=/root/.config/clash/ CONFFILE=router.yaml PROG=/usr/bin/clash start_service() { procd_open_instance procd_set_param command $PROG -f $CONF$CONFFILE -d $CONF procd_set_param stdout 1 procd_set_param stderr 1 procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-9} procd_close_instance } 设置权限，并使之生效 chmod 755 /etc/init.d/clash service clash enable 启动Clash service clash start 配置Clash UI (可选)\n使用Winscp工具，将yacd.tar内的文件夹上传到openWrt机器，然后执行以下命令 mv /root/public /root/.config/clash/ui /etc/init.d/clash restart 在浏览器地址栏中输入: http://192.168.88.3:9090/ui 显示以下内容，在Host一栏输入192.168.88.3，点击确定即可显示Clash详细页面 3. 软件下载 名称 版本号 说明 下载地址 Clash Premium 透明代理 https://release.dreamacro.workers.dev/latest/clash-linux-amd64-latest.gz Clash-dashboard clash Web界面 https://github.com/Dreamacro/clash-dashboard/archive/refs/heads/gh-pages.zip Winscp 5.21 SCP客户端 https://winscp.net/download/WinSCP-5.21.5-Portable.zip Putty 0.78 虚拟终端 https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe Country.mmdb IP地址库 https://github.com/Dreamacro/maxmind-geoip/releases/latest/download/Country.mmdb 4. 说明 Clash版本区别 Premium 版本支持TUN和配置文件中RULE-SET\n如果有电视机顶盒,只能使用Premium版本\nClash规则配置文件格式(Premium有效) payload: - DOMAIN-SUFFIX,yinxiang.com - DOMAIN-SUFFIX,fb.me - DOMAIN-KEYWORD,linkedin - DOMAIN,local.adguard.org - IP-CIDR,192.168.0.0/16 - PROCESS-NAME,wechat Clash配置说明\n规则 说明 范例 说明 PROCESS-NAME 匹配进程 wechat.exe 进程名包含该关键字,在透明代理上不生效 PROCESS-SUFFIX 域名后缀 yinxiang.com PROCESS-KEYWORD 域名关键字 linkedin DOMAIN 域名匹配 local.adguard.org IP-CIDR IP段匹配 192.168.0.0/16 SRC-IP-CIDR 源IP段匹配 192.168.0.0/16 GEOIP GEOIP数据库匹配 CN 国家代码 DST-PORT 目标端口匹配 SRC-PORT 源端口匹配 MATCH 全匹配 一般放在最后 Clash的配置文件详细说明\n此配置文件既可以用在普通版本也可以用在Preumium版本\n# HTTP 代理端口 port: 7890 # SOCKS5 代理端口 socks-port: 7891 # Linux 和 macOS 的 redir 透明代理端口 (重定向 TCP 和 TProxy UDP 流量) # redir-port: 7892 # Linux 的透明代理端口（适用于 TProxy TCP 和 TProxy UDP 流量) # tproxy-port: 7893 # HTTP(S) and SOCKS5 共用端口 # mixed-port: 7890 # 本地 SOCKS5/HTTP(S) 服务验证 # authentication: # - \u0026#34;user1:pass1\u0026#34; # - \u0026#34;user2:pass2\u0026#34; # 允许局域网的连接（可用来共享代理） allow-lan: true bind-address: \u0026#34;*\u0026#34; # 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数： # \u0026#34;*\u0026#34; 绑定所有的 IP 地址 # 192.168.122.11 绑定一个的 IPv4 地址 # \u0026#34;[aaaa::a8aa:ff:fe09:57d8]\u0026#34; 绑定一个 IPv6 地址 # Clash 路由工作模式 # 规则模式：rule（规则） / global（全局代理）/ direct（全局直连） mode: rule # Clash 默认将日志输出至 STDOUT # 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。 # 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。 log-level: silent # clash 的 RESTful API 监听地址 external-controller: 127.0.0.1:9090 # 存放配置文件的相对路径，或存放网页静态资源的绝对路径 # Clash core 将会将其部署在 http://{{external-controller}}/ui # external-ui: folder # RESTful API 的口令 (可选) # 通过 HTTP 头中 Authorization: Bearer ${secret} 参数来验证口令 # 当 RESTful API 的监听地址为 0.0.0.0 时，请务必设定口令以保证安全 # secret: \u0026#34;\u0026#34; # 出站网卡接口 # interface-name: en0 # DNS 服务器和建立连接时的 静态 Hosts, 仅在 dns.enhanced-mode 模式为 redir-host 生效 # 支持通配符域名 (例如: *.clash.dev, *.foo.*.example.com ) # 不使用通配符的域名优先级高于使用通配符的域名 (例如: foo.example.com \u0026gt; *.example.com \u0026gt; .example.com ) # 注意: +.foo.com 的效果等同于 .foo.com 和 foo.com hosts: # \u0026#39;*.clash.dev\u0026#39;: 127.0.0.1 # \u0026#39;.dev\u0026#39;: 127.0.0.1 # \u0026#39;alpha.clash.dev\u0026#39;: \u0026#39;::1\u0026#39; # DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭) dns: enable: true listen: 0.0.0.0:53 ipv6: true # 当此选项为 false 时, AAAA 请求将返回空 # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名 # 仅填写 DNS 服务器的 IP 地址 default-nameserver: - 223.5.5.5 - 114.114.114.114 enhanced-mode: fake-ip # 或 redir-host fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 (CIDR 形式) # use-hosts: true # 查询 hosts 并返回 IP 记录 # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址 fake-ip-filter: # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充 # === LAN === - \u0026#39;*.lan\u0026#39; # === Linksys Wireless Router === - \u0026#39;*.linksys.com\u0026#39; - \u0026#39;*.linksyssmartwifi.com\u0026#39; # === Apple Software Update Service === - \u0026#39;swscan.apple.com\u0026#39; - \u0026#39;mesu.apple.com\u0026#39; # === Windows 10 Connnect Detection === - \u0026#39;*.msftconnecttest.com\u0026#39; - \u0026#39;*.msftncsi.com\u0026#39; # === NTP Service === - \u0026#39;time.*.com\u0026#39; - \u0026#39;time.*.gov\u0026#39; - \u0026#39;time.*.edu.cn\u0026#39; - \u0026#39;time.*.apple.com\u0026#39; - \u0026#39;time1.*.com\u0026#39; - \u0026#39;time2.*.com\u0026#39; - \u0026#39;time3.*.com\u0026#39; - \u0026#39;time4.*.com\u0026#39; - \u0026#39;time5.*.com\u0026#39; - \u0026#39;time6.*.com\u0026#39; - \u0026#39;time7.*.com\u0026#39; - \u0026#39;ntp.*.com\u0026#39; - \u0026#39;ntp.*.com\u0026#39; - \u0026#39;ntp1.*.com\u0026#39; - \u0026#39;ntp2.*.com\u0026#39; - \u0026#39;ntp3.*.com\u0026#39; - \u0026#39;ntp4.*.com\u0026#39; - \u0026#39;ntp5.*.com\u0026#39; - \u0026#39;ntp6.*.com\u0026#39; - \u0026#39;ntp7.*.com\u0026#39; - \u0026#39;*.time.edu.cn\u0026#39; - \u0026#39;*.ntp.org.cn\u0026#39; - \u0026#39;+.pool.ntp.org\u0026#39; - \u0026#39;time1.cloud.tencent.com\u0026#39; # === Music Service === ## NetEase - \u0026#39;+.music.163.com\u0026#39; - \u0026#39;*.126.net\u0026#39; ## Baidu - \u0026#39;musicapi.taihe.com\u0026#39; - \u0026#39;music.taihe.com\u0026#39; ## Kugou - \u0026#39;songsearch.kugou.com\u0026#39; - \u0026#39;trackercdn.kugou.com\u0026#39; ## Kuwo - \u0026#39;*.kuwo.cn\u0026#39; ## JOOX - \u0026#39;api-jooxtt.sanook.com\u0026#39; - \u0026#39;api.joox.com\u0026#39; - \u0026#39;joox.com\u0026#39; ## QQ - \u0026#39;+.y.qq.com\u0026#39; - \u0026#39;+.music.tc.qq.com\u0026#39; - \u0026#39;aqqmusic.tc.qq.com\u0026#39; - \u0026#39;+.stream.qqmusic.qq.com\u0026#39; ## Xiami - \u0026#39;*.xiami.com\u0026#39; ## Migu - \u0026#39;+.music.migu.cn\u0026#39; # === Game Service === ## Nintendo Switch - \u0026#39;+.srv.nintendo.net\u0026#39; ## Sony PlayStation - \u0026#39;+.stun.playstation.net\u0026#39; ## Microsoft Xbox - \u0026#39;xbox.*.microsoft.com\u0026#39; - \u0026#39;+.xboxlive.com\u0026#39; # === Other === ## QQ Quick Login - \u0026#39;localhost.ptlogin2.qq.com\u0026#39; ## Golang - \u0026#39;proxy.golang.org\u0026#39; ## STUN Server - \u0026#39;stun.*.*\u0026#39; - \u0026#39;stun.*.*.*\u0026#39; ## Bilibili CDN - \u0026#39;*.mcdn.bilivideo.cn\u0026#39; # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。 # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。 # Clash 会使用最先获得的解析记录回复 DNS 请求 nameserver: - https://doh.pub/dns-query - https://dns.alidns.com/dns-query # 当 fallback 参数被配置时, DNS 请求将同时发送至上方 nameserver 列表和下方 fallback 列表中配置的所有 DNS 服务器. # 当解析得到的 IP 地址的地理位置不是 CN 时，clash 将会选用 fallback 中 DNS 服务器的解析结果。 # fallback: # - https://dns.google/dns-query # 如果使用 nameserver 列表中的服务器解析的 IP 地址在下方列表中的子网中，则它们被认为是无效的， # Clash 会选用 fallback 列表中配置 DNS 服务器解析得到的结果。 # # 当 fallback-filter.geoip 为 true 且 IP 地址的地理位置为 CN 时， # Clash 会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。 # # 当 fallback-filter.geoip 为 false, 如果解析结果不在 fallback-filter.ipcidr 范围内， # Clash 总会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。 # # 采取以上逻辑进行域名解析是为了对抗 DNS 投毒攻击。 fallback-filter: geoip: false ipcidr: - 240.0.0.0/4 - 0.0.0.0/32 # domain: # - \u0026#39;+.google.com\u0026#39; # - \u0026#39;+.facebook.com\u0026#39; # - \u0026#39;+.youtube.com\u0026#39; proxies: # shadowsocks # 支持加密方式： # aes-128-gcm aes-192-gcm aes-256-gcm # aes-128-cfb aes-192-cfb aes-256-cfb # aes-128-ctr aes-192-ctr aes-256-ctr # rc4-md5 chacha20 chacha20-ietf xchacha20 # chacha20-ietf-poly1305 xchacha20-ietf-poly1305 - name: \u0026#34;ss1\u0026#34; type: ss server: server port: 443 cipher: chacha20-ietf-poly1305 password: \u0026#34;password\u0026#34; # udp: true - name: \u0026#34;ss2\u0026#34; type: ss server: server port: 443 cipher: AEAD_CHACHA20_POLY1305 password: \u0026#34;password\u0026#34; plugin: obfs plugin-opts: mode: tls # 混淆模式，可以选择 http 或 tls host: bing.com # 混淆域名，需要和服务器配置保持一致 - name: \u0026#34;ss3\u0026#34; type: ss server: server port: 443 cipher: AEAD_CHACHA20_POLY1305 password: \u0026#34;password\u0026#34; plugin: v2ray-plugin plugin-opts: mode: websocket # 暂时不支持 QUIC 协议 # tls: true # wss # skip-cert-verify: true # host: bing.com # path: \u0026#34;/\u0026#34; # headers: # custom: value # vmess # 支持加密方式：auto / aes-128-gcm / chacha20-poly1305 / none - name: \u0026#34;vmess\u0026#34; type: vmess server: server port: 443 uuid: uuid alterId: 32 cipher: auto # udp: true # tls: true # skip-cert-verify: true # servername: example.com # 优先级高于 wss host # network: ws # ws-path: /path # ws-headers: # Host: v2ray.com - name: \u0026#34;vmess-http\u0026#34; type: vmess server: server port: 443 uuid: uuid alterId: 32 cipher: auto # udp: true # network: http # http-opts: # # method: \u0026#34;GET\u0026#34; # # path: # # - \u0026#39;/\u0026#39; # # - \u0026#39;/video\u0026#39; # # headers: # # Connection: # # - keep-alive # socks5 - name: \u0026#34;socks\u0026#34; type: socks5 server: server port: 443 # username: username # password: password # tls: true # skip-cert-verify: true # udp: true # http - name: \u0026#34;http\u0026#34; type: http server: server port: 443 # username: username # password: password # tls: true # https # skip-cert-verify: true # snell (注意：暂时不支持 UDP 转发) - name: \u0026#34;snell\u0026#34; type: snell server: server port: 44046 psk: yourpsk # obfs-opts: # mode: http # 或 tls # host: bing.com # Trojan - name: \u0026#34;trojan\u0026#34; type: trojan server: server port: 443 password: yourpsk # udp: true # sni: example.com # 服务名称 # alpn: # - h2 # - http/1.1 # skip-cert-verify: true # ShadowsocksR # 支持的加密方式: SS 中支持的所有流加密方式 # 支持的混淆方式: # plain http_simple http_post # random_head tls1.2_ticket_auth tls1.2_ticket_fastauth # 支持的协议: # origin auth_sha1_v4 auth_aes128_md5 # auth_aes128_sha1 auth_chain_a auth_chain_b - name: \u0026#34;ssr\u0026#34; type: ssr server: server port: 443 cipher: chacha20-ietf password: \u0026#34;password\u0026#34; obfs: tls1.2_ticket_auth protocol: auth_sha1_v4 # obfs-param: domain.tld # protocol-param: \u0026#34;#\u0026#34; # udp: true proxy-groups: # 代理的转发链, 在 proxies 中不应该包含 relay. 不支持 UDP. # 流量: clash \u0026lt;-\u0026gt; http \u0026lt;-\u0026gt; vmess \u0026lt;-\u0026gt; ss1 \u0026lt;-\u0026gt; ss2 \u0026lt;-\u0026gt; 互联网 - name: \u0026#34;relay\u0026#34; type: relay proxies: - http - vmess - ss1 - ss2 # url-test 可以自动选择与指定 URL 测速后，延迟最短的服务器 - name: \u0026#34;auto\u0026#34; type: url-test proxies: - ss1 - ss2 - vmess1 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 # fallback 可以尽量按照用户书写的服务器顺序，在确保服务器可用的情况下，自动选择服务器 - name: \u0026#34;fallback-auto\u0026#34; type: fallback proxies: - ss1 - ss2 - vmess1 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 # load-balance 可以使相同 eTLD 请求在同一条代理线路上 - name: \u0026#34;load-balance\u0026#34; type: load-balance proxies: - ss1 - ss2 - vmess1 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 # select 用来允许用户手动选择 代理服务器 或 服务器组 # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用 - name: Proxy type: select proxies: - ss1 - ss2 - vmess1 - auto - name: UseProvider type: select use: - provider1 proxies: - Proxy - DIRECT proxy-providers: provider1: type: http url: \u0026#34;url\u0026#34; interval: 3600 path: ./provider1.yaml health-check: enable: true interval: 600 url: http://www.gstatic.com/generate_204 test: type: file path: /test.yaml health-check: enable: true interval: 36000 url: http://www.gstatic.com/generate_204 rules: # 自定义规则 ## 您可以在此处插入您补充的自定义规则（请注意保持缩进） # DOMAIN-SUFFIX：域名后缀匹配 # DOMAIN：域名匹配 # DOMAIN-KEYWORD：域名关键字匹配 # IP-CIDR：IP段匹配 # SRC-IP-CIDR：源IP段匹配 # GEOIP：GEOIP数据库（国家代码）匹配 # DST-PORT：目标端口匹配 # SRC-PORT：源端口匹配 # PROCESS-NAME：源进程名匹配 # RULE-SET：Rule Provider规则匹配 # MATCH：全匹配 # 国内网站 - DOMAIN-SUFFIX,cn,DIRECT - DOMAIN-KEYWORD,-cn,DIRECT # 抗 DNS 污染 - DOMAIN-KEYWORD,amazon,Proxy # 常见广告域名屏蔽 - DOMAIN-KEYWORD,admarvel,REJECT # 国外网站 - DOMAIN-SUFFIX,9to5mac.com,Proxy - DOMAIN-SUFFIX,abpchina.org,Proxy # Telegram - DOMAIN-SUFFIX,telegra.ph,Proxy - DOMAIN-SUFFIX,telegram.org,Proxy - IP-CIDR,91.108.4.0/22,Proxy - IP-CIDR,91.108.8.0/21,Proxy - IP-CIDR,91.108.16.0/22,Proxy - IP-CIDR,91.108.56.0/22,Proxy - IP-CIDR,149.154.160.0/20,Proxy - IP-CIDR6,2001:67c:4e8::/48,Proxy - IP-CIDR6,2001:b28:f23d::/48,Proxy - IP-CIDR6,2001:b28:f23f::/48,Proxy # LAN - DOMAIN,injections.adguard.org,DIRECT - DOMAIN,local.adguard.org,DIRECT - DOMAIN-SUFFIX,local,DIRECT - IP-CIDR,127.0.0.0/8,DIRECT - IP-CIDR,172.16.0.0/12,DIRECT - IP-CIDR,192.168.0.0/16,DIRECT - IP-CIDR,10.0.0.0/8,DIRECT - IP-CIDR,17.0.0.0/8,DIRECT - IP-CIDR,100.64.0.0/10,DIRECT - IP-CIDR,224.0.0.0/4,DIRECT - IP-CIDR6,fe80::/10,DIRECT # 最终规则 - GEOIP,CN,DIRECT - MATCH,Proxy 5. Q\u0026amp;A 问： 执行脚本返回 答： 脚本默认openWrt已安装tun，如果之前未安装，请执行 opkg update opkg install kmod-tun 全文完\n","permalink":"https://qing.shuncs.com/post/tech/clashinst/","summary":"安装并配置Clash","title":"在openWrt上安装并配置Clash (Clash篇)"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n主路由器的地址: 192.168.88.1(如果不同,后面涉及此地址全部需要修改)\n目标 按下文安装配置完openWrt之后，在浏览器上输入192.168.88.3就可以打开openWrt的主界面\n0. 安装PE 如果已经有U盘启动的可以跳过此步骤\n插入U盘，启动微PE软件，选择安装进U盘。点击立即安装进U盘，U盘启动盘已制作完毕。 1. 在软路由上安装openWrt 将下载好的openwrt-22.03.2-x86-64-generic-ext4-combined.img.gz用7zip（或其他工具）解压到U盘上，并且与physdiskwrite.exe文件放在一个目录。\n使用U盘重启系统，输入以下命令\nphysdiskwrite.exe -u openWrt-22.03.2-x86-64-generic-ext4-combined.img 此时会提示选择硬盘(千万不能选错硬盘分区) 输入硬盘之前的序号就开始安装，安装完毕之后重启电脑后拔下U盘。\n2. 配置openWrt 以下步骤中，文件中的配置内容若存在则修改，没有就新增\n修改IP，DNS和网关(必做) uci set network.lan.ipaddr=\u0026#39;192.168.88.3\u0026#39; uci set network.lan.gateway=\u0026#39;192.168.88.1\u0026#39; uci add_list network.lan.dns=\u0026#39;192.168.88.1\u0026#39; uci commit network 生效网络配置 service network restart 此步骤执行完毕后，可以使用Putty（或XShell等远程工具）。\n更新openWrt包(可选,需联网) opkg update 安装中文包及主题(可选) opkg install luci-i18n-base-zh-cn opkg install luci-i18n-firewall-zh-cn opkg install luci-theme-material 更新openWrt时区(可选) uci set system.@system[0].zonename=\u0026#39;Asia/Shanghai\u0026#39; uci set system.@system[0].timezone=\u0026#39;CST-8\u0026#39; uci commit system 生效系统配置 service system restart 安装tun(使用Clash Premiumn必装) opkg install kmod-tun 安装tproxy(可选) opkg install kmod-nft-tproxy 在浏览器上输入192.168.88.3即可打开openWrt的主页面。\n点击登录就可以进入openWrt详情界面。 3. 软件下载 名称 版本号 说明 下载地址 微PE工具箱 2.2 U盘启动 https://mirrors.sdu.edu.cn/software/Windows/WePE/WePE64_V2.2.exe openWrt 22.03 路由器操作系统 https://downloads.openWrt.org/releases/22.03.2/targets/x86/64/openWrt-22.03.2-x86-64-generic-ext4-combined.img.gz Putty 0.78 虚拟终端 https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe 4. 说明 openWrt各版本区别\ncombined-ext4.img.gz：包含引导信息、rootfs(ext4 格式)、内核以及相关分区信息的硬盘镜像，可以 dd 写入某个磁盘。\ncombined-squashfs.img.gz：包含引导信息、rootfs(squashfs 格式)、内核以及相关分区信息的硬盘镜像。\ngeneric-rootfs.tar.gz：rootfs 包含的所有文件。\nrootfs-ext4.img.gz：rootfs(ext4 格式) 分区镜像，可以 dd 到某个分区或者 mount -o 到某个目录。\nrootfs-squashfs.img.gz：rootfs(squashfs 格式) 分区镜像，可以 dd 写入某个分区或者 mount -o 挂载到目录。\nvmlinuz：内核\next4 与 squashfs 格式的区别\next4 格式的 rootfs 可以扩展磁盘空间大小，而 squashfs 不能。\nsquashfs 格式的 rootfs 可以使用重置功能（恢复出厂设置），而 ext4 不能。\nUEFI\n当您的机器支持 UEFI 的话（新机器一般同时支持 Legacy 和 UEFI ），在这个启动项中一般会出现两个 U 盘的选项，一个是 UEFI 开头的，另一个是不带 UEFI 开头的或叫 Legacy 的\n当您的机器（老机器）只支持 Legacy 时，在这个主板的启动项中就只会出现一个 U 盘的选项\n全文完\n","permalink":"https://qing.shuncs.com/post/tech/openwrt_inst/","summary":"安装并配置openWrt","title":"在openWrt上安装并配置Clash (openWrt篇)"},{"content":"使用环境 开发环境: Windows 11\nHugo版本: 0.108\nGit版本: 2.38.1\nTheme: PaperMod\n前要 上个月底想把荒废已久的blog重新拾起来，当初创建这个blog就是相当简单，使用Hugo+主题+Github。 可以说是完全按照网上的教程的发布到Github上，发布上去之后就基本不看也不用了。\n最近有点想法，想自己的一些日常笔记发布上去，可是我找不到以前的配置了，实在没办法，只能新建一个，按照网上教程，沿用原来的主题。\n发现问题 配置完 config.yml 之后发布到github上，发现css文件无法加载。可是在本地试了没问题，而且印象之前貌似没有这种情况呀。\n打开F12跟踪了一下，发布在css上有个错误 \u0026ldquo;Failed to find a valid digest in the \u0026lsquo;integrity\u0026rsquo; attribute for resource - The resource has been blocked\u0026rdquo;\n于是搜索一下这个错误，原来是index.html文件里面的有一个属性的SHA256不匹配，在Stackoverflow上面有个解决办法，就是在 config.yml 中加上下面这个配置就能解决了，我试了一下，的确是没问题。\nparams: assets: disableFingerprinting: true config.toml 文件配置\nparams.assets.disableFingerprinting = true 问题到此似乎解决了，不过我好奇这个问题这个问题以前没出现过，是不是升级hugo或者主题的新版本之后才有?\n而且我后来测试的时候，config.yml 使用最简的配置，问题依然还有。为什么我在hugo和PaperMod的issue上没找到此类问题描述？\n查了一下hugo的文档，integrity这个属性是为了文件的完整性，防止被篡改，可问题是我在本地发布，同时使用git提交，这个过程中怎么可能被改？\n解决 这个时候我突然想起来了，在我做git add的时候曾经有个warning，当时因为能提交成功所以就忽略这个warning。 因为Windows和Linux对于回车符有些不太一样，于是我又在Linux机器上使用相同的命令和配置重新做了一下，并发布到Github上，结果在Linux机器上发布的就没问题，问题确定就是回车引起的，在网上查了一下，应该是安装Git的时候，未勾选下面的配置。 不过如果Git安装好了，使用下面的命令也可以实现。\ngit config --global core.autocrlf false 这样重新使用git add并提交，然后push到Github上，css样式就可以顺利加载了。\n参考文章 https://stackoverflow.com/questions/65040931/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource 全文完\n","permalink":"https://qing.shuncs.com/post/tech/hugo/","summary":"发布到Github上,css文件无法加载","title":"解决Hugo无法加载css文件"}]