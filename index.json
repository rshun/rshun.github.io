[{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n目标 在电脑或手机上手动配置网关（或在路由器上将网关设置成192.168.88.3)，可以直接代理上网\n执行前Clash必须已启动且能正常上网\n0. 自动安装 如果openWrt未安装tproxy模块则执行下面脚本 wget https://www.shuncs.com/download/instnft_redir.sh \u0026amp;\u0026amp; chmod +x instnft_redir.sh \u0026amp;\u0026amp; ./instnft_redir.sh 如果openWrt已安装tproxy模块执行下面脚本 wget https://www.shuncs.com/download/instnft_tproxy.sh \u0026amp;\u0026amp; chmod +x instnft_tproxy.sh \u0026amp;\u0026amp; ./instnft_tproxy.sh 1. 新增私有地址列表 vi /etc/nftables.d/private.nft 将下列内容复制到此文件，然后按:wq退出\ndefine private_list = { 0.0.0.0/8, 10.0.0.0/8, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.168.0.0/16, 224.0.0.0/4, 240.0.0.0/4 } 2. 新增nftable配置 新增配置文件 vi /etc/nftables.conf 将下面内容复制到此文件，并按:wq保存退出 #!/usr/sbin/nft -f flush ruleset # 如果未安装tproxy,则将下一行注释掉 define tproxyPort=7893 # 如果已安装tproxy,则将下一行注释掉 define redirPort=7892 include \u0026#34;/etc/nftables.d/private.nft\u0026#34; include \u0026#34;/etc/nftables.d/vip.nft\u0026#34; table inet clash { chain prerouting { type nat hook prerouting priority 0; policy accept; ip daddr $private_list return # 如果未安装tproxy,则将下一行注释掉 meta l4proto {tcp, udp } tproxy to :$tproxyPort # 如果已安装tproxy,则将下一行注释掉 meta l4proto {tcp, udp } redirect to :$redirPort } } 3. 生效Nftable配置 nft flush ruleset nft -f /etc/nftables.conf 4. 设置在openWrt每次开机自动启动Nftable 新增配置文件 vi /etc/init.d/nft 将下述内容复制到文件中,将按:wq保存退出 #!/bin/sh /etc/rc.common START=90 STOP=15 USE_PROCD=1 #PROCD_DEBUG=1 CONF=/etc/ CONFFILE=nftables.conf PROG=/usr/sbin/nft start_service() { procd_open_instance procd_set_param command $PROG -f $CONF$CONFFILE procd_set_param stdout 1 procd_set_param stderr 1 procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-9} procd_close_instance } 修改权限,并使之生效 chmod 755 /etc/init.d/nft service nft enable 启动nft service nft start 5. 配置Dnsmasq, 将dns指向Clash的5353端口 uci add_list dhcp.@dnsmasq[0].server=\u0026#39;127.0.0.1#5353\u0026#39; uci commit dhcp service dnsmasq restart 全文完\n","permalink":"https://qing.shuncs.com/post/tech/nft4clash/","summary":"配置nftable","title":"在openWrt上安装并配置Clash (Nftable篇)"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nClash版本: Premium\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n目标 安装及配置完Clash后，在浏览器的设置-\u0026gt;系统-\u0026gt;打开您计算机的代理设置-\u0026gt;手动设置代理 按上图输入主路由器地址和端口，并保存退出就可以访问Google\n0. 下载 以下软件需要预先下载，然后再通过Winscp工具上传到openWrt里面。\nClash Country.mmdb yacd (UI界面，可选) 也可以在openWrt命令行执行以下脚本自动安装及配置后续全部内容（但代理配置文件仍需自定义）\nwget https://www.shuncs.com/download/instclash.sh \u0026amp;\u0026amp; chmod +x instclash.sh \u0026amp;\u0026amp; ./instclash.sh 1. 安装Clash 打开Winscp客户端，点击新建会话(快捷键ctrl+n)，文件协议选择SCP，主机名里面输入主路由器地址192.168.88.3，用户名输入root，如下图 然后点击保存和确定，然后点击登录，将下载好的软件上传到openWrt中(如果有密钥提示，点击添加)\n使用putty登录openWrt，然后按顺序执行以下命令（大小写勿输错）\ncd /root gunzip clash-linux-amd64-latest.gz mv clash-linux-amd64-latest /usr/bin/clash chmod +x /usr/bin/clash mkdir -p /root/.config/clash mv Country.mmdb .config/clash/ 2. 配置 新增Clash配置文件 vi /root/.config/clash/router.yaml 将如下内容复制到文件中(以下部分内容自定义)，然后输入:wq保存退出\nmixed-port: 7890 redir-port: 7892 tproxy-port: 7893 allow-lan: true log-level: info ipv6: false #下面三行内容可以在web页面查看流量规则等,如果未安装请在前面加# secret: \u0026#39;\u0026#39; external-controller: \u0026#39;192.168.88.3:9090\u0026#39; external-ui: ui profile: store-fake-ip: true tun: enable: true stack: system dns-hijack: - tcp://8.8.8.8:53 - udp://8.8.8.8:53 auto-route: true auto-detect-interface: true dns: enable: true ipv6: false listen: 0.0.0.0:5353 enhanced-mode: fake-ip fake-ip-range: 198.18.0.1/16 nameserver: - 114.114.114.114 - 223.5.5.5 fallback: - tls://dns.google:853 - tls://1.1.1.1:853 fallback-filter: geoip: true ipcidr: - 240.0.0.0/4 proxy-providers: proxyA: #根据实际情况自定义 type: file path: ./proxies/proxyA.yaml #根据实际情况自定义 health-check: enable: true interval: 36000 url: http://www.gstatic.com/generate_204 proxyB: #根据实际情况自定义 type: file path: ./proxies/proxyB.yaml #根据实际情况自定义 health-check: enable: true interval: 36000 url: http://www.gstatic.com/generate_204 proxyURL: #如果是订阅链接在此处配置即可 type: url url: \u0026#34;https://raw.githubusercontent.com/learnhard-cn/free_proxy_ss/main/clash/clash.provider.yaml\u0026#34; #根据实际情况自定义 interval: 3600 path: ./proxies/proxyURL.yaml #根据实际情况自定义 health-check: enable: true interval: 600 url: http://www.gstatic.com/generate_204 proxy-groups: - name: \u0026#34;auto\u0026#34; type: url-test use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 - name: Proxy type: select use: - proxyB #需要和上面名称对应 # fallback 自动选择服务器 - name: \u0026#34;fallback-auto\u0026#34; type: fallback use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 - name: \u0026#34;load-balance\u0026#34; type: load-balance use: - proxyA #需要和上面名称对应 - proxyB #需要和上面名称对应 url: \u0026#39;http://www.gstatic.com/generate_204\u0026#39; interval: 300 rule-providers: reject: type: file behavior: classical path: ./rules/reject.yaml proxy: type: file behavior: classical path: ./rules/proxy.yaml rules: # 拒绝-\u0026gt;代理-\u0026gt;其余直连 - RULE-SET,reject,REJECT - RULE-SET,proxy,fallback-auto - MATCH,DIRECT 新增规则文件 输入以下命令\nvi /root/.config/clash/rules/proxy.yaml 将如下内容复制到文件中，然后输入:wq保存退出\npayload: - DOMAIN-KEYWORD,amazon - DOMAIN-KEYWORD,google - DOMAIN-KEYWORD,gmail - DOMAIN-KEYWORD,youtube - DOMAIN-KEYWORD,facebook - DOMAIN-SUFFIX,fb.me - DOMAIN-SUFFIX,fbcdn.net - DOMAIN-KEYWORD,twitter - DOMAIN-KEYWORD,instagram - DOMAIN-KEYWORD,dropbox - DOMAIN-SUFFIX,twimg.com - DOMAIN-KEYWORD,blogspot - DOMAIN-SUFFIX,youtu.be - DOMAIN-KEYWORD,whatsapp - DOMAIN-SUFFIX,9to5mac.com - DOMAIN-SUFFIX,abpchina.org - DOMAIN-SUFFIX,adblockplus.org - DOMAIN-SUFFIX,adobe.com - DOMAIN-SUFFIX,akamaized.net - DOMAIN-SUFFIX,alfredapp.com - DOMAIN-SUFFIX,amplitude.com - DOMAIN-SUFFIX,ampproject.org - DOMAIN-SUFFIX,android.com - DOMAIN-SUFFIX,angularjs.org - DOMAIN-SUFFIX,aolcdn.com - DOMAIN-SUFFIX,apkpure.com - DOMAIN-SUFFIX,appledaily.com - DOMAIN-SUFFIX,appshopper.com - DOMAIN-SUFFIX,appspot.com - DOMAIN-SUFFIX,arcgis.com - DOMAIN-SUFFIX,archive.org - DOMAIN-SUFFIX,armorgames.com - DOMAIN-SUFFIX,aspnetcdn.com - DOMAIN-SUFFIX,att.com - DOMAIN-SUFFIX,awsstatic.com - DOMAIN-SUFFIX,azureedge.net - DOMAIN-SUFFIX,azurewebsites.net - DOMAIN-SUFFIX,bing.com - DOMAIN-SUFFIX,bintray.com - DOMAIN-SUFFIX,bit.com - DOMAIN-SUFFIX,bit.ly - DOMAIN-SUFFIX,bitbucket.org - DOMAIN-SUFFIX,bjango.com - DOMAIN-SUFFIX,bkrtx.com - DOMAIN-SUFFIX,blog.com - DOMAIN-SUFFIX,blogcdn.com - DOMAIN-SUFFIX,blogger.com - DOMAIN-SUFFIX,blogsmithmedia.com - DOMAIN-SUFFIX,blogspot.com - DOMAIN-SUFFIX,blogspot.hk - DOMAIN-SUFFIX,bloomberg.com - DOMAIN-SUFFIX,box.com - DOMAIN-SUFFIX,box.net - DOMAIN-SUFFIX,cachefly.net - DOMAIN-SUFFIX,chromium.org - DOMAIN-SUFFIX,cl.ly - DOMAIN-SUFFIX,cloudflare.com - DOMAIN-SUFFIX,cloudfront.net - DOMAIN-SUFFIX,cloudmagic.com - DOMAIN-SUFFIX,cmail19.com - DOMAIN-SUFFIX,cnet.com - DOMAIN-SUFFIX,cocoapods.org - DOMAIN-SUFFIX,comodoca.com - DOMAIN-SUFFIX,crashlytics.com - DOMAIN-SUFFIX,culturedcode.com - DOMAIN-SUFFIX,d.pr - DOMAIN-SUFFIX,danilo.to - DOMAIN-SUFFIX,dayone.me - DOMAIN-SUFFIX,db.tt - DOMAIN-SUFFIX,deskconnect.com - DOMAIN-SUFFIX,disq.us - DOMAIN-SUFFIX,disqus.com - DOMAIN-SUFFIX,disquscdn.com - DOMAIN-SUFFIX,dnsimple.com - DOMAIN-SUFFIX,docker.com - DOMAIN-SUFFIX,dribbble.com - DOMAIN-SUFFIX,droplr.com - DOMAIN-SUFFIX,duckduckgo.com - DOMAIN-SUFFIX,dueapp.com - DOMAIN-SUFFIX,dytt8.net - DOMAIN-SUFFIX,edgecastcdn.net - DOMAIN-SUFFIX,edgekey.net - DOMAIN-SUFFIX,edgesuite.net - DOMAIN-SUFFIX,engadget.com - DOMAIN-SUFFIX,entrust.net - DOMAIN-SUFFIX,eurekavpt.com - DOMAIN-SUFFIX,evernote.com - DOMAIN-SUFFIX,fabric.io - DOMAIN-SUFFIX,fast.com - DOMAIN-SUFFIX,fastly.net - DOMAIN-SUFFIX,fc2.com - DOMAIN-SUFFIX,feedburner.com - DOMAIN-SUFFIX,feedly.com - DOMAIN-SUFFIX,feedsportal.com - DOMAIN-SUFFIX,fiftythree.com - DOMAIN-SUFFIX,firebaseio.com - DOMAIN-SUFFIX,flexibits.com - DOMAIN-SUFFIX,flickr.com - DOMAIN-SUFFIX,flipboard.com - DOMAIN-SUFFIX,g.co - DOMAIN-SUFFIX,gabia.net - DOMAIN-SUFFIX,geni.us - DOMAIN-SUFFIX,gfx.ms - DOMAIN-SUFFIX,ggpht.com - DOMAIN-SUFFIX,ghostnoteapp.com - DOMAIN-SUFFIX,git.io - DOMAIN-KEYWORD,github - DOMAIN-SUFFIX,globalsign.com - DOMAIN-SUFFIX,gmodules.com - DOMAIN-SUFFIX,godaddy.com - DOMAIN-SUFFIX,golang.org - DOMAIN-SUFFIX,gongm.in - DOMAIN-SUFFIX,goo.gl - DOMAIN-SUFFIX,goodreaders.com - DOMAIN-SUFFIX,goodreads.com - DOMAIN-SUFFIX,gravatar.com - DOMAIN-SUFFIX,gstatic.com - DOMAIN-SUFFIX,gvt0.com - DOMAIN-SUFFIX,hockeyapp.net - DOMAIN-SUFFIX,hotmail.com - DOMAIN-SUFFIX,icons8.com - DOMAIN-SUFFIX,ifixit.com - DOMAIN-SUFFIX,ift.tt - DOMAIN-SUFFIX,ifttt.com - DOMAIN-SUFFIX,iherb.com - DOMAIN-SUFFIX,imageshack.us - DOMAIN-SUFFIX,img.ly - DOMAIN-SUFFIX,imgur.com - DOMAIN-SUFFIX,imore.com - DOMAIN-SUFFIX,instapaper.com - DOMAIN-SUFFIX,ipn.li - DOMAIN-SUFFIX,is.gd - DOMAIN-SUFFIX,issuu.com - DOMAIN-SUFFIX,itgonglun.com - DOMAIN-SUFFIX,itun.es - DOMAIN-SUFFIX,ixquick.com - DOMAIN-SUFFIX,j.mp - DOMAIN-SUFFIX,js.revsci.net - DOMAIN-SUFFIX,jshint.com - DOMAIN-SUFFIX,jtvnw.net - DOMAIN-SUFFIX,justgetflux.com - DOMAIN-SUFFIX,kat.cr - DOMAIN-SUFFIX,klip.me - DOMAIN-SUFFIX,libsyn.com - DOMAIN-SUFFIX,linkedin.com - DOMAIN-SUFFIX,linode.com - DOMAIN-SUFFIX,lithium.com - DOMAIN-SUFFIX,littlehj.com - DOMAIN-SUFFIX,live.com - DOMAIN-SUFFIX,live.net - DOMAIN-SUFFIX,livefilestore.com - DOMAIN-SUFFIX,llnwd.net - DOMAIN-SUFFIX,macid.co - DOMAIN-SUFFIX,macromedia.com - DOMAIN-SUFFIX,macrumors.com - DOMAIN-SUFFIX,mashable.com - DOMAIN-SUFFIX,mathjax.org - DOMAIN-SUFFIX,medium.com - DOMAIN-SUFFIX,mega.co.nz - DOMAIN-SUFFIX,mega.nz - DOMAIN-SUFFIX,megaupload.com - DOMAIN-SUFFIX,microsofttranslator.com - DOMAIN-SUFFIX,mindnode.com - DOMAIN-SUFFIX,mobile01.com - DOMAIN-SUFFIX,modmyi.com - DOMAIN-SUFFIX,msedge.net - DOMAIN-SUFFIX,myfontastic.com - DOMAIN-SUFFIX,name.com - DOMAIN-SUFFIX,nextmedia.com - DOMAIN-SUFFIX,nsstatic.net - DOMAIN-SUFFIX,nssurge.com - DOMAIN-SUFFIX,nyt.com - DOMAIN-SUFFIX,nytimes.com - DOMAIN-SUFFIX,omnigroup.com - DOMAIN-SUFFIX,onedrive.com - DOMAIN-SUFFIX,onenote.com - DOMAIN-SUFFIX,ooyala.com - DOMAIN-SUFFIX,openvpn.net - DOMAIN-SUFFIX,openwrt.org - DOMAIN-SUFFIX,orkut.com - DOMAIN-SUFFIX,osxdaily.com - DOMAIN-SUFFIX,outlook.com - DOMAIN-SUFFIX,ow.ly - DOMAIN-SUFFIX,paddleapi.com - DOMAIN-SUFFIX,parallels.com - DOMAIN-SUFFIX,parse.com - DOMAIN-SUFFIX,pdfexpert.com - DOMAIN-SUFFIX,periscope.tv - DOMAIN-SUFFIX,pinboard.in - DOMAIN-SUFFIX,pinterest.com - DOMAIN-SUFFIX,pixelmator.com - DOMAIN-SUFFIX,pixiv.net - DOMAIN-SUFFIX,playpcesor.com - DOMAIN-SUFFIX,playstation.com - DOMAIN-SUFFIX,playstation.com.hk - DOMAIN-SUFFIX,playstation.net - DOMAIN-SUFFIX,playstationnetwork.com - DOMAIN-SUFFIX,pushwoosh.com - DOMAIN-SUFFIX,rime.im - DOMAIN-SUFFIX,servebom.com - DOMAIN-SUFFIX,sfx.ms - DOMAIN-SUFFIX,shadowsocks.org - DOMAIN-SUFFIX,sharethis.com - DOMAIN-SUFFIX,shazam.com - DOMAIN-SUFFIX,skype.com - DOMAIN-SUFFIX,smartdnsProxy.com - DOMAIN-SUFFIX,smartmailcloud.com - DOMAIN-SUFFIX,sndcdn.com - DOMAIN-SUFFIX,sony.com - DOMAIN-SUFFIX,soundcloud.com - DOMAIN-SUFFIX,sourceforge.net - DOMAIN-SUFFIX,spotify.com - DOMAIN-SUFFIX,squarespace.com - DOMAIN-SUFFIX,sstatic.net - DOMAIN-SUFFIX,st.luluku.pw - DOMAIN-SUFFIX,stackoverflow.com - DOMAIN-SUFFIX,startpage.com - DOMAIN-SUFFIX,staticflickr.com - DOMAIN-SUFFIX,steamcommunity.com - DOMAIN-SUFFIX,symauth.com - DOMAIN-SUFFIX,symcb.com - DOMAIN-SUFFIX,symcd.com - DOMAIN-SUFFIX,tapbots.com - DOMAIN-SUFFIX,tapbots.net - DOMAIN-SUFFIX,tdesktop.com - DOMAIN-SUFFIX,techcrunch.com - DOMAIN-SUFFIX,techsmith.com - DOMAIN-SUFFIX,thepiratebay.org - DOMAIN-SUFFIX,theverge.com - DOMAIN-SUFFIX,time.com - DOMAIN-SUFFIX,timeinc.net - DOMAIN-SUFFIX,tiny.cc - DOMAIN-SUFFIX,tinypic.com - DOMAIN-SUFFIX,tmblr.co - DOMAIN-SUFFIX,todoist.com - DOMAIN-SUFFIX,trello.com - DOMAIN-SUFFIX,trustasiassl.com - DOMAIN-SUFFIX,tumblr.co - DOMAIN-SUFFIX,tumblr.com - DOMAIN-SUFFIX,tweetdeck.com - DOMAIN-SUFFIX,tweetmarker.net - DOMAIN-SUFFIX,twitch.tv - DOMAIN-SUFFIX,txmblr.com - DOMAIN-SUFFIX,typekit.net - DOMAIN-SUFFIX,ubertags.com - DOMAIN-SUFFIX,ublock.org - DOMAIN-SUFFIX,ubnt.com - DOMAIN-SUFFIX,ulyssesapp.com - DOMAIN-SUFFIX,urchin.com - DOMAIN-SUFFIX,usertrust.com - DOMAIN-SUFFIX,v.gd - DOMAIN-SUFFIX,v2ex.com - DOMAIN-SUFFIX,vimeo.com - DOMAIN-SUFFIX,vimeocdn.com - DOMAIN-SUFFIX,vine.co - DOMAIN-SUFFIX,vivaldi.com - DOMAIN-SUFFIX,vox-cdn.com - DOMAIN-SUFFIX,vsco.co - DOMAIN-SUFFIX,vultr.com - DOMAIN-SUFFIX,w.org - DOMAIN-SUFFIX,w3schools.com - DOMAIN-SUFFIX,webtype.com - DOMAIN-SUFFIX,wikiwand.com - DOMAIN-SUFFIX,wikileaks.org - DOMAIN-SUFFIX,wikimedia.org - DOMAIN-SUFFIX,wikipedia.com - DOMAIN-SUFFIX,wikipedia.org - DOMAIN-SUFFIX,windows.com - DOMAIN-SUFFIX,windows.net - DOMAIN-SUFFIX,wire.com - DOMAIN-SUFFIX,wordpress.com - DOMAIN-SUFFIX,workflowy.com - DOMAIN-SUFFIX,wp.com - DOMAIN-SUFFIX,wsj.com - DOMAIN-SUFFIX,wsj.net - DOMAIN-SUFFIX,xda-developers.com - DOMAIN-SUFFIX,xeeno.com - DOMAIN-SUFFIX,xiti.com - DOMAIN-SUFFIX,yahoo.com - DOMAIN-SUFFIX,yimg.com - DOMAIN-SUFFIX,ying.com - DOMAIN-SUFFIX,yoyo.org - DOMAIN-SUFFIX,ytimg.com 新增黑名单文件 输入以下命令\nvi /root/.config/clash/rules/reject.yaml 将如下内容复制到文件中，然后输入:wq保存退出\npayload: - DOMAIN-KEYWORD,admarvel - DOMAIN-KEYWORD,admaster - DOMAIN-KEYWORD,adsage - DOMAIN-KEYWORD,adsmogo - DOMAIN-KEYWORD,adsrvmedia - DOMAIN-KEYWORD,adwords - DOMAIN-KEYWORD,adservice - DOMAIN-SUFFIX,appsflyer.com - DOMAIN-KEYWORD,domob - DOMAIN-SUFFIX,doubleclick.net - DOMAIN-KEYWORD,duomeng - DOMAIN-KEYWORD,dwtrack - DOMAIN-KEYWORD,guanggao - DOMAIN-KEYWORD,lianmeng - DOMAIN-SUFFIX,mmstat.com - DOMAIN-KEYWORD,mopub - DOMAIN-KEYWORD,omgmta - DOMAIN-KEYWORD,openx - DOMAIN-KEYWORD,partnerad - DOMAIN-KEYWORD,pingfore - DOMAIN-KEYWORD,supersonicads - DOMAIN-KEYWORD,uedas - DOMAIN-KEYWORD,umeng - DOMAIN-KEYWORD,usage - DOMAIN-SUFFIX,vungle.com - DOMAIN-KEYWORD,wlmonitor - DOMAIN-KEYWORD,zjtoolbar 测试Clash配置文件的格式是否正确 clash -t /root/.config/clash/router.yaml 设置openWrt中每次开机自动启动Clash vi /etc/init.d/clash 将此内容复制到文件中,并输入:wq保存退出。\n#!/bin/sh /etc/rc.common START=90 STOP=15 USE_PROCD=1 #PROCD_DEBUG=1 CONF=/root/.config/clash/ CONFFILE=router.yaml PROG=/usr/bin/clash start_service() { procd_open_instance procd_set_param command $PROG -f $CONF$CONFFILE -d $CONF procd_set_param stdout 1 procd_set_param stderr 1 procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-9} procd_close_instance } 设置权限，并使之生效 chmod 755 /etc/init.d/clash service clash enable 启动Clash service clash start 配置Clash UI (可选)\n使用Winscp工具，将yacd.tar内的文件夹上传到openWrt机器，然后执行以下命令 mv /root/public /root/.config/clash/ui /etc/init.d/clash restart 在浏览器地址栏中输入: http://192.168.88.3:9090/ui 显示以下内容，在Host一栏输入192.168.88.3，点击确定即可显示Clash详细页面 3. 软件下载 名称 版本号 说明 下载地址 Clash Premium 透明代理 https://release.dreamacro.workers.dev/latest/clash-linux-amd64-latest.gz Clash-dashboard clash Web界面 https://github.com/Dreamacro/clash-dashboard/archive/refs/heads/gh-pages.zip Winscp 5.21 SCP客户端 https://winscp.net/download/WinSCP-5.21.5-Portable.zip Putty 0.78 虚拟终端 https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe Country.mmdb IP地址库 https://github.com/Dreamacro/maxmind-geoip/releases/latest/download/Country.mmdb 4. 说明 Clash版本区别 Premium 版本支持TUN和配置文件中RULE-SET\n如果有电视机顶盒,只能使用Premium版本\nClash规则配置文件格式(Premium有效) payload: - DOMAIN-SUFFIX,yinxiang.com - DOMAIN-SUFFIX,fb.me - DOMAIN-KEYWORD,linkedin - DOMAIN,local.adguard.org - IP-CIDR,192.168.0.0/16 - PROCESS-NAME,wechat Clash配置说明 规则 说明 范例 说明 PROCESS-NAME 匹配进程 wechat.exe 进程名包含该关键字,在透明代理上不生效 PROCESS-SUFFIX 域名后缀 yinxiang.com PROCESS-KEYWORD 域名关键字 linkedin DOMAIN 域名匹配 local.adguard.org IP-CIDR IP段匹配 192.168.0.0/16 SRC-IP-CIDR 源IP段匹配 192.168.0.0/16 GEOIP GEOIP数据库匹配 CN 国家代码 DST-PORT 目标端口匹配 SRC-PORT 源端口匹配 MATCH 全匹配 一般放在最后 全文完\n","permalink":"https://qing.shuncs.com/post/tech/clashinst/","summary":"安装并配置Clash","title":"在openWrt上安装并配置Clash (Clash篇)"},{"content":"安装环境 软路由机器架构: x86_64\nOpenWrt版本: 22.03\nOpenWrt的IP: 192.168.88.3 (如果不同,后面涉及此地址全部需要修改)\n主路由器的地址: 192.168.88.1(如果不同,后面涉及此地址全部需要修改)\n目标 按下文安装配置完openWrt之后，在浏览器上输入192.168.88.3就可以打开openWrt的主界面\n0. 安装PE 如果已经有U盘启动的可以跳过此步骤\n插入U盘，启动微PE软件，选择安装进U盘。点击立即安装进U盘，U盘启动盘已制作完毕。 1. 在软路由上安装openWrt 将下载好的openwrt-22.03.2-x86-64-generic-ext4-combined.img.gz用7zip（或其他工具）解压到U盘上，并且与physdiskwrite.exe文件放在一个目录。\n使用U盘重启系统，输入以下命令\nphysdiskwrite.exe -u openWrt-22.03.2-x86-64-generic-ext4-combined.img 此时会提示选择硬盘(千万不能选错硬盘分区) 输入硬盘之前的序号就开始安装，安装完毕之后重启电脑后拔下U盘。\n2. 配置openWrt 以下步骤中，文件中的配置内容若存在则修改，没有就新增\n修改IP，DNS和网关(必做) uci set network.lan.ipaddr=\u0026#39;192.168.88.3\u0026#39; uci set network.lan.gateway=\u0026#39;192.168.88.1\u0026#39; uci add_list network.lan.dns=\u0026#39;192.168.88.1\u0026#39; uci commit network 生效网络配置 service network restart 此步骤执行完毕后，可以使用Putty（或XShell等远程工具）。\n更新openWrt包(可选,需联网) opkg update 安装中文包及主题(可选) opkg install luci-i18n-base-zh-cn opkg install luci-i18n-firewall-zh-cn opkg install luci-theme-material 更新openWrt时区(可选) uci set system.@system[0].zonename=\u0026#39;Asia/Shanghai\u0026#39; uci set system.@system[0].timezone=\u0026#39;CST-8\u0026#39; uci commit system 生效系统配置 service system restart 安装tun(使用Clash Premiumn必装) opkg install kmod-tun 安装tproxy(可选) opkg install kmod-nft-tproxy 在浏览器上输入192.168.88.3即可打开openWrt的主页面。\n点击登录就可以进入openWrt详情界面。 3. 软件下载 名称 版本号 说明 下载地址 微PE工具箱 2.2 U盘启动 https://mirrors.sdu.edu.cn/software/Windows/WePE/WePE64_V2.2.exe openWrt 22.03 路由器操作系统 https://downloads.openWrt.org/releases/22.03.2/targets/x86/64/openWrt-22.03.2-x86-64-generic-ext4-combined.img.gz Putty 0.78 虚拟终端 https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe 4. 说明 openWrt各版本区别\ncombined-ext4.img.gz：包含引导信息、rootfs(ext4 格式)、内核以及相关分区信息的硬盘镜像，可以 dd 写入某个磁盘。\ncombined-squashfs.img.gz：包含引导信息、rootfs(squashfs 格式)、内核以及相关分区信息的硬盘镜像。\ngeneric-rootfs.tar.gz：rootfs 包含的所有文件。\nrootfs-ext4.img.gz：rootfs(ext4 格式) 分区镜像，可以 dd 到某个分区或者 mount -o 到某个目录。\nrootfs-squashfs.img.gz：rootfs(squashfs 格式) 分区镜像，可以 dd 写入某个分区或者 mount -o 挂载到目录。\nvmlinuz：内核\next4 与 squashfs 格式的区别\next4 格式的 rootfs 可以扩展磁盘空间大小，而 squashfs 不能。\nsquashfs 格式的 rootfs 可以使用重置功能（恢复出厂设置），而 ext4 不能。\nUEFI\n当您的机器支持 UEFI 的话（新机器一般同时支持 Legacy 和 UEFI ），在这个启动项中一般会出现两个 U 盘的选项，一个是 UEFI 开头的，另一个是不带 UEFI 开头的或叫 Legacy 的\n当您的机器（老机器）只支持 Legacy 时，在这个主板的启动项中就只会出现一个 U 盘的选项\n全文完\n","permalink":"https://qing.shuncs.com/post/tech/openwrt_inst/","summary":"安装并配置openWrt","title":"在openWrt上安装并配置Clash (openWrt篇)"},{"content":"使用环境 开发环境: Windows 11\nHugo版本: 0.108\nGit版本: 2.38.1\nTheme: PaperMod\n前要 上个月底想把荒废已久的blog重新拾起来，当初创建这个blog就是相当简单，使用Hugo+主题+Github。 可以说是完全按照网上的教程的发布到Github上，发布上去之后就基本不看也不用了。\n最近有点想法，想自己的一些日常笔记发布上去，可是我找不到以前的配置了，实在没办法，只能新建一个，按照网上教程，沿用原来的主题。\n发现问题 配置完 config.yml 之后发布到github上，发现css文件无法加载。可是在本地试了没问题，而且印象之前貌似没有这种情况呀。\n打开F12跟踪了一下，发布在css上有个错误 \u0026ldquo;Failed to find a valid digest in the \u0026lsquo;integrity\u0026rsquo; attribute for resource - The resource has been blocked\u0026rdquo;\n于是搜索一下这个错误，原来是index.html文件里面的有一个属性的SHA256不匹配，在Stackoverflow上面有个解决办法，就是在 config.yml 中加上下面这个配置就能解决了，我试了一下，的确是没问题。\nparams: assets: disableFingerprinting: true config.toml 文件配置\nparams.assets.disableFingerprinting = true 问题到此似乎解决了，不过我好奇这个问题这个问题以前没出现过，是不是升级hugo或者主题的新版本之后才有?\n而且我后来测试的时候，config.yml 使用最简的配置，问题依然还有。为什么我在hugo和PaperMod的issue上没找到此类问题描述？\n查了一下hugo的文档，integrity这个属性是为了文件的完整性，防止被篡改，可问题是我在本地发布，同时使用git提交，这个过程中怎么可能被改？\n解决 这个时候我突然想起来了，在我做git add的时候曾经有个warning，当时因为能提交成功所以就忽略这个warning。 因为Windows和Linux对于回车符有些不太一样，于是我又在Linux机器上使用相同的命令和配置重新做了一下，并发布到Github上，结果在Linux机器上发布的就没问题，问题确定就是回车引起的，在网上查了一下，应该是安装Git的时候，未勾选下面的配置。 不过如果Git安装好了，使用下面的命令也可以实现。\ngit config --global core.autocrlf false 这样重新使用git add并提交，然后push到Github上，css样式就可以顺利加载了。\n参考文章 https://stackoverflow.com/questions/65040931/hugo-failed-to-find-a-valid-digest-in-the-integrity-attribute-for-resource 全文完\n","permalink":"https://qing.shuncs.com/post/tech/hugo/","summary":"发布到Github上,css文件无法加载","title":"解决Hugo无法加载css文件"}]